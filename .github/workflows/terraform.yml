name: Terraform

on: [push]

jobs:

  # -- TESTS ------------------------------------------------------------------
  tests:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@b7dfd5c4e0108a6e434ad5cb062abe9beb9388cd
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.0.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@ed3a0531877aca392eb870f440d9ae7aba83a6bd # tag=v1.4.0
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: apply
        run: terraform plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # -- SAST SCAN --------------------------------------------------------------
  code-security:
    name: Code Security
    runs-on: ubuntu-latest
    needs: tests
    # Skip any PR created by dependabot to avoid permission issues
    if: (github.actor != 'dependabot[bot]')

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@b7dfd5c4e0108a6e434ad5cb062abe9beb9388cd
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Perform Scan
        uses: ShiftLeftSecurity/scan-action@master

        env:
          WORKSPACE: https://github.com/${{ github.repository }}/blob/${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SCAN_ANNOTATE_PR: true

      - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3.1.0
        with:
          name: reports
          path: reports

  # -- DOCUMENTATION ----------------------------------------------------------
  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@b7dfd5c4e0108a6e434ad5cb062abe9beb9388cd
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.0.0
        with:
          ref: 'main' # Force checkout of main branch to avoid caching from previous jobs

      - name: Terraform Docs
        uses: terraform-docs/gh-actions@f6d59f89a280fa0a3febf55ef68f146784b20ba0 # tag=v1.0.0
        with:
          working-dir: .
          output-file: USAGE.md
          output-method: inject
          git-push: "true"
          git-commit-message: "chore(docs): update Terraform docs"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }} # use a different GITHUB_TOKEN to run commit on protected branches

  # -- RELEASE ----------------------------------------------------------------
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - code-security
      - documentation
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@b7dfd5c4e0108a6e434ad5cb062abe9beb9388cd
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
        with:
          ref: 'main' # Force checkout of main branch to avoid caching from previous jobs
          persist-credentials: false

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }} # use a different GITHUB_TOKEN to run commit on protected branches
